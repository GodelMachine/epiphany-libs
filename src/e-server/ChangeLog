2014-01-28  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* Release/src/subdir.mk: Added TargetControl.cpp.
	* src/GdbServer.cpp: Put contributors in header, tidy up
	organization of included headers.
	(rspServer, rspClientRequest, rspReportException, targetResume)
	(getAttachedTargetCoreId): Use getAttachedCoreId rather than
	GetAttachedCoreId.
	(rspReadAllRegs, rspReadMem): use startOfBaudMeasurement member
	function instead of StartOfBaudMeasurement, rename ReadBurst to
	readBurst, use endOfBaudMeasurement member function instead of
	EndOfBaudMeasurement.
	(rspWriteMem, rspWriteMemBin, restoreIVT): Rename WriteBurst to
	writeBurst.
	(rspQuery): Rename SetAttachedTargetCoreId as
	setAttachedTargetCoreId
	(isTargetInIldeState): Rename ReadBurst to readBurst.
	(targetHWReset): Rename PlatformReset to platformReset.
	* src/GdbServer.h: Put contributors in header, make guard macro
	naming consistent.
	* src/TargetControl.cpp: Created.
	* src/TargetControl.h: Put contributors in header, include
	sys/time.h, remove local typedefs of uint32_t, uint8_t and
	uint16_t, rename WriteBurst as writeBurst, ReadBurst as readBurst,
	PlatformReset as platformReset and ResumeAndExit as resumeAndExit
	for consistency, add initAttachedCoreId, add E_BYTE_BYTES,
	E_SHORT_BYTES, E_WORD_BYTES and E_DOUBLE_BYTES, make
	convertAddress a member function, add startTime as member
	variable.
	* src/TargetControlHardware.cpp: Put contributors in header,
	remove enum of _BYTE_, _SHORT_, _WORD_ and _DOUBLE_ and replace by
	E_BYTE_BYTES, E_SHORT_BYTES, E_WORD_BYTES and E_DOUBLE_BYTES
	throughout, tidy up headers and remove duplicate includes, add
	explicit using declarations.
	(init_platform, close_platform, write_to, read_from, hw_reset)
	(get_description, get_memory_map, get_number_supported_cores)
	(set_chip_x_y, e_open, e_close, e_read, e_write, e_reset)
	(e_set_host_verbosity): Deleted and replaced by member variables.
	(IsAddressLocal): Deleted.
	(CORE_SPACE): Deleted and replaced by member constant.
	(PlatformReset): Deleted and replaced by platformReset throughout.
	(platformReset): Created from PlatformReset.
	(ReadBurst): Deleted and replaced by readBurst throughout.
	(readBurst): Created from ReadBurst.
	(WriteBurst): Deleted and replaced by writeBurst throughout.
	(writeBurst): Created from WriteBurst.
	(SetAttachedCoreId): Deleted and replaced by setAttachedCoreId
	throughout.
	(setAttachedCoreId): Created from SetAttachedCoreId.
	(GetTargetId): Deleted and replaced by getTargetId throughout.
	(getTargetId): Created from GetTargetId.
	(ConvertAddress): Deleted and replaced by member function
	convertAddress throughout.
	(convertAddress): Created from ConvertAddress.
	(TargetControlHardware): Add parameters for command line switches
	instead of using global variables.
	(dontCheckHwAddr): Renamed from dontCheckHwAddress throughout.
	(BreakSignalHander): Deleted and replaced by static member
	function breakSignalHander.
	(breakSignalHandler): Created, and all references to member
	variables commented out.
	(initHwPlatform): Made member function, use helper to find DSO
	entries.
	(initDefaultMemoryMap): Made member function.
	(initAttachedCoreId): Created
	(startOfBaudMeasurement, endOfBaudMeasurement, findSharedFunc)
	(getMemoryMap, getRegisterMap): Created.
	* src/TargetControlHardware.h: Extend constructor arguments,
	rename WriteBurst as writeBurst, ReadBurst as readBurst,
	PlatformReset as platformReset, SetAttachedCoreId as
	setAttachedCoreId, ResumeAndExit as resumeAndExit and GetTargetId
	as getTargetId, make ConvertAddress member function
	convertAddress, add new member functions initHwPlatform,
	initDefaultMemoryMap, getMemoryMap, getRegisterMap,
	initAttachedCoreId, findSharedFunc, add pointers to DSO functions
	init_platform, close_platform, write_to, read_from, hw_reset,
	get_description, get_memory_map, get_number_supported_cores,
	set_chip_x_y, e_open, e_close, e_read, e_write, e_reset and
	e_set_host_verbosity
	* src/main.cpp: Add missing using declarations
	(skip_platform_reset): Deleted, now arg to constructor.
	(showMemoryMap): Get maps through accessors
	(initPlatform): Pass command line switches as arguments, ,
	initialze tCntrl and return as result.
	(main): Use EXIT_FAILURE and EXIT_SUCCESS result codes for
	consistency.

2014-01-28  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/main.cpp (initPlatform): Created from code to initialize in
	main function.
	(main): Remove initialization code into initPlatform.

2014-01-27  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/main.cpp (ThreadData, createGdbServer): Deleted.
	(main): Remove mainRetStatus, create a single port GdbServer.

2014-01-27  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/main.cpp: Include sstream.
	(platform_args): Deleted (replaced by platformArgs local to main.
	(show_memory_map): Deleted (replaced by doShowMemoryMap) local to
	main.
	(showMemoryMap): Created, based on code previously in main.
	(main): Make declaration of hdf_file local and change to hdfFile,
	make arg check use if-then-else structure, use stringstream to
	parse -Wpl, move code to show memory map to its own routine.

2014-01-27  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* Release/src/subdir.mk: Add CPPFLAGS to command line.
	* src/RspConnection.cpp (rspConnect): Add mutex around listen
	error message and report error details.
	* src/main.cpp: Make explicit which functions using applies to.
	(copyrightStr): Move as literal to copyright
	function.
	(revision): Delete and replace by defined value.
	(XDOREVSTR, DOREVSTR, REVSTR): New macros.
	(usage): Rewritten to include all options and remove all terminal
	specific control codes, takes argument to specify output stream.
	(usage_hidden): Deleted.
	(copyright): Unified to print all information consistently, using
	supplied revision string.
	(main): Return success if printing version or help, remove
	--help-hidden, replace usage and usage_hidden by usage with either
	cout or cerr as parameters, don't use designated initializer for
	ThreadData, since not standard C++ (C99 only).

2014-01-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/GdbServer.cpp (GdbServer): Pass haltOnAttach, ttyOut and
	withTtySupport flags to constructor, rather than as global variables.
	* src/GdbServer.h: New prototype for constructor, haltOnAttach,
	ttyOut and withTtySupport as member variables.
	* src/TargetControlHardware.cpp: Move e-xml and e-hal header
	includes to header file
	(TargetControlHardware): Pass in dontCheckHwAddress flag to
	constructor rather than as global variable.
	(initHwPlatform): New static member function rather than global.
	(initDefaultMemoryMap): New static member function rather than global.
	* src/TargetControlHardware.h: Add e-xml and e-hal header
	includes, update constructor prototype, new static functions
	initHwPlatform and initDefaultMemoryMap
	* src/main.cpp: haltOnAttach, ttyOut, withTtySupport and
	dontCheckHwAddress passed through relevant
	constructors. initHwPlatform and initDefaultMemoryMap as static
	member functions.
	(ThreadData): Struct for data to be used with pthread_create.

2014-01-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* Release/src/subdir.mk: Removed e_printf.c
	* src/e_printf.c: Deleted.
	* src/GdbServer.cpp (printWrapper): Created, based on
	printf_wrapper.
	* src/GdbServer.h (printfWrapper): New private member function
	replacing the global printf_wrapper.

2014-01-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* Release/src/subdir.mk: Renamed targetCntrlHardware as
	TargetControlHardware.
	* src/TargetControl.h: Renamed from targetCntrl.h for consistency.
	* src/TargetControlHardware.cpp: Renamed from
	targetCntrlHardware.cpp for consistency.
	* src/TargetControlHardware.h: Renamed from
	targetCntrlHardware.h for consistency.
	* src/GdbServer.h: Changed all references to targetCtrl to
	TargetControl.
	* src/TargetControl.h: Likewise.
	* src/TargetControlHardware.cpp: Likewise.
	* src/TargetControlHardware.h: Likewise.
	* src/main.cpp: Likewise.

2014-01-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* GdbServer.cpp: Replace SystemC types throughout.
	(GdbServer): Move constructor to this file from header.
	(is32BitsInstr): Made member function, replacing global Is32BitsInstr.
	(getfield, setfield): Made member functions, replacing global
	equivalents.
	(getAttachedTargetCoreId): Implementation moved here from
	definition file.
	* GdbServer.h: Remove all SystemC typedefs, replacing by the
	equivalent inttypes.h entry. Consolidate public and private member
	functions for clarity, move constructor to implementation file
	from definition file, make global functions member functions.
	(GdbServer): Implementation moved to implementation file.
	(getAttachedTargetCoreId): Made private and renamed from
	GetAttachedTargetCoreId, implementation moved to implementation
	file.
	(releaseGdbCmdSelectedCoreId): Made private and renamed from
	ReleaseGdbCmdSelectedCoreId.
	* targetCntrl.h: Get rid of typedefs for SystemC types, and
	replace with inttypes througout.
	* targetCntrlHardware.cpp: Likewise.
	* targetCntrlHardware.h: Likewise.

2014-01-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* Release/src/subdir.mk: Remove unneeded Gdbservercreate and rename
	GdbServerSC as GdbServer.
	* GdbServer.cpp: Renamed from GdbServerSC.cpp and all references
	internally updated.
	* GdbServer.h: Renamed from GdbServerSC.h and all references
	internally updated.
	* GdbserverCreate.cpp: Deleted
	* libgloss_syscall.h: Header comment change.
	* main.cpp: Incorporate GdbserverCreate and change reference to
	GdbServer from GdbServerSC.
	(createGdbServer): Renamed from CreateGdbServer.

2014-01-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* ChangeLog: Created.
	* Release/src/subdir.mk: Make stricter in error testing.
	* src/GdbServerSC.cpp: Return to GNU style, and enforce for emacs
	to facilitate comparision against upstream codebase.
	* src/GdbServerSC.h: Likewise.
	* src/GdbserverCreate.cpp: Likewise.
	* src/LoaderServer.h: Likewise.
	* src/MpHash.cpp: Likewise.
	* src/MpHash.h: Likewise.
	* src/RspConnection.cpp: Likewise.
	* src/RspConnection.h: Likewise.
	* src/RspPacket.cpp: Likewise.
	* src/RspPacket.h: Likewise.
	* src/Utils.cpp: Likewise.
	* src/Utils.h: Likewise.
	* src/debugVerbose.h: Likewise.
	* src/e_printf.cpp: Likewise.
	* src/libgloss_syscall.h: Likewise.
	* src/maddr_defs.h: Likewise.
	* src/main.cpp: Likewise.
	* src/targetCntrl.h: Likewise.
	* src/targetCntrlHardware.cpp: Likewise.
	* src/targetCntrlHardware.h: Likewise.
	* src/target_param.h: Likewise.
